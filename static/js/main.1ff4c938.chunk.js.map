{"version":3,"sources":["spotifyWebAPI/spotify_config.js","components/Login.js","components/ExpiredToken.js","components/NotEnoughData.js","components/WelcomeMessage.js","components/Track.js","components/Tracks.js","components/Video.js","components/Videos.js","spotifyWebAPI/uri_hash.js","tumblr_config.js","App.js","index.js"],"names":["formattedScope","join","auth_uri","process","Login","props","Modal","show","size","aria-labelledby","Body","style","color","href","role","ExpiredToken","Header","Title","target","rel","NotEnoughData","WelcomeMessage","useState","setShow","onHide","centered","closeButton","Track","trackInfoRef","createRef","trackAudio","changeSize","changeStyle","useEffect","ResizeObserver","entries","contentRect","height","diff","handleSize","observe","current","selected","pause","currentTime","id","className","src","imageArt","url","alt","width","borderRadius","ref","onClick","name","audio","UpdateSelected","play","updateState","onMouseEnter","updateStyle","fontSize","songName","artistName","sound","Tracks","currentVideo","currentVideoURL","tracks","map","track","image","artistsName","previewURL","updateSelected","key","timeOuts","Video","currentVideoBlog","setVideoBlog","vSourceRef","useRef","divRef","video","length","i","clearTimeout","previewVideo","forEach","pVideo","push","setTimeout","originURL","backgroundImage","undefined","originBlog","ReachedEnd","Videos","result","filter","hash","window","location","substring","split","reduce","initialVlaue","item","parts","decodeURIComponent","tumblrApiKey","access_token","mainViewRef","App","state","expired_token","spotify_login","initialLoad","notEnoughData","retrieveSpotifyData","a","fetch","headers","response","json","status","setState","items","parsedItems","preview_url","pItem","index","artists","videoTime","album","images","retrieveTumblrData","parsedVideo","posts","post","type","numOfVids","photos","original_size","source_title","source_url","trackId","this","login","console","log","backgroundColor","Container","fluid","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ff4c938.chunk.js","sourcesContent":["// Accessing Spotify through Implicit Grant Flow\n\n// Endpoint used by Spotify to authorize webpage to access Spotify data\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n// Parameters attached to the URI\nexport const clientId = process.env.REACT_APP_SPOTIFY_API_CLIENT_ID;\nexport const redirectUri = \"http://ryanPaul07.github.io/discovertracks\";\nexport const scope = [\n  \"user-read-private\", \n  \"user-read-email\", \n  \"user-top-read\",\n  \"playlist-read-collaborative\",\n  \"playlist-modify-public\", \n  \"playlist-read-private\", \n  \"playlist-modify-private\"\n];\n\nexport const formattedScope = scope.join(\"%20\");\n\n\n","import React from 'react';\n\nimport { authEndpoint, clientId, redirectUri, formattedScope } from '../spotifyWebAPI/spotify_config';\nimport Modal from 'react-bootstrap/Modal';\n\nconst auth_uri = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${formattedScope}&response_type=token&show_dialog=true`; // template strings used to login to Spotify\n\nfunction Login(props) {\n  const show = true;\n\n  return(\n    <>\n      <Modal show={show}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        >\n\n        <Modal.Body>\n          <center><a style={{color: '#1DB954'}} href={auth_uri} role=\"button\">Login to Spotify</a> to access website features</center>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default Login;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction ExpiredToken(props) {\n  const show = true;\n\n  return(\n    <>\n      <Modal show={show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n      >\n        <Modal.Header>\n          <Modal.Title>\n            Token has expired\n          </Modal.Title>      \n        </Modal.Header>\n        <Modal.Body>\n          Please click the    \n          <a style={{color:'#1DB954'}} href=\"https://discoversongs.herokuapp.com/\" target=\"_blank\" rel=\"noopener noreferrer\" role=\"button\"> link </a>\n          to access the website again!\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ExpiredToken;","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction NotEnoughData(props) {\n  const show = true;\n\n  return(\n    <>\n      <Modal show={show}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n      >\n        <Modal.Header>\n          <Modal.Title>\n            Not Enough Data\n          </Modal.Title>      \n        </Modal.Header>\n        <Modal.Body>\n          Looks like there is not enough data to create a playlist. Listen to some songs at \n          <a style={{color:'#1DB954'}} href=\"https://www.spotify.com\" target=\"_blank\" rel=\"noopener noreferrer\" role=\"button\"> Spotify </a>\n          and come back to find a curated playlist for you. \n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default NotEnoughData;","import React, {useState} from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction WelcomeMessage(props) {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n  \n  return(\n    <>\n      <Modal show={show} onHide={handleClose}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Welcome \n          </Modal.Title>      \n        </Modal.Header>\n        <Modal.Body>\n          This website will allow you to discover new music, based on  \n          <a style={{color:'#1DB954'}} href=\"https://developer.spotify.com/documentation/web-api/reference/personalization/get-users-top-artists-and-tracks/\" target=\"_blank\" rel=\"noopener noreferrer\" role=\"button\"> Spotify's Personalization API Endpoint</a>.\n          Each track will also have a unique mashups of gifs based on \n          <a style={{color:'#1DB954'}} href=\"https://www.tumblr.com/docs/en/api/v2\" target=\"_blank\" rel=\"noopener noreferrer\" role=\"button\"> Tumblr's Blog /posts API Endpoint</a>.\n          If you would like to learn more about this website or some of my other projects, check out my \n          <a style={{color:'rgb(247, 55, 95)'}} href=\"https://github.com/ryanPaul07\" target=\"_blank\" rel=\"noopener noreferrer\" role=\"button\"> Github!</a>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default WelcomeMessage;","import React, {useState, createRef ,useEffect} from 'react';\n\nfunction Track(props) {\n\n  const trackInfoRef = createRef();                       // used to reference div which will constantly be updated with styling\n  const trackAudio   = createRef();\n  const [size, changeSize]   = useState('1.25rem');       // defalut text size \n  const [style, changeStyle] = useState('not-selected');  // defalut styling for trackInfoRef\n\n  useEffect(() => {\n\n    // called after change observed in difRef\n    // using entries array to access trackInfoRef properties\n    const resizeObserver = new ResizeObserver((entries) => {\n      if(entries[0].contentRect.height > 100) {\n        const diff = entries[0].contentRect.height - 100;\n        handleSize(diff);\n      }       \n    });\n    \n    // using resizeObserver to observe change in div\n    // accessing .current to get DOM node \n    resizeObserver.observe(trackInfoRef.current);  \n\n    // if track is not selected return to defalut styling (used to indicate selected track)\n    if(props.selected === false) {\n      changeStyle('not-selected');\n      trackAudio.current.pause();\n      trackAudio.current.currentTime = 0;\n    } \n\n  }, [trackInfoRef, trackAudio, props.selected, props.id]);  \n\n  // decreasing the font-size based on users device\n  const handleSize = (diff) => {\n    if(diff > 25) {\n      changeSize('0.90rem');\n    }\n    else {\n      changeSize('1.00rem');\n    }\n  }\n\n  const updateState = (name) => {\n    const audio = trackAudio.current; \n    props.UpdateSelected(props.id); // update state by sending selected track\n    changeStyle(name);              // update style for selected track\n    audio.pause();\n    audio.currentTime = 0;\n    audio.play();\n  }\n\n  const updateStyle = (style) => {\n    // only update styles for tracks which are not selected\n    if(!props.selected) {\n      changeStyle(style);\n    } \n  }\n\n  return (\n    <div className=\"trackArray\">\n      <div>\n        <img src={props.imageArt.url} alt=\"album art\" width=\"100\" height=\"100\" style={{borderRadius: '7px'}}></img>\n      </div>\n      <div className={style} ref={trackInfoRef} onClick={() => updateState(\"selected\")} onMouseEnter={() => updateStyle(\"not-selected\")} >\n        <div style={{fontSize: `${size}`}}>\n          <center>{props.songName}</center>\n        </div>\n        <h6><em><center>{props.artistName}</center></em></h6>\n        <audio ref={trackAudio} src={props.sound}></audio>\n      </div>\n    </div>\n  );\n}\n\nexport default Track;","import React from 'react';\n\nimport Track from './Track';\n\nfunction Tracks(props) {\n  \n  const tracks = props.tracks;\n\n  return tracks.map(track => (\n    <Track \n      imageArt={track.image} \n      songName={track.songName} \n      artistName={track.artistsName} \n      sound={track.previewURL} \n      id={track.id} \n      selected = {track.selected}\n      UpdateSelected={props.updateSelected} \n      key={track.id}\n    />\n  ));\n}\n\nexport default Tracks;","import React, {useRef, useEffect, useState} from 'react';\n\nvar currentVideo;\nvar currentVideoURL;\nvar timeOuts = [];\n\nfunction Video (props) {\n\n  const [currentVideoBlog, setVideoBlog] = useState(\"\");\n  const vSourceRef = useRef();\n  const divRef = useRef();\n  \n  useEffect(() => {\n    \n    // Check if a video is selected and passed in\n    if(props.video.length !== 0) {\n      \n      // clear all timeouts before moving forward\n      for(var i = 0; i < timeOuts.length; i++) {              // loop through all unique setTimeouts and clear them before starting a new timer\n        clearTimeout(timeOuts[i]);                            // clearTimeout uses unique number to keep track of each setTimeout and clears it\n      }\n\n      // changes background image every 5 seconds\n      props.video[0].previewVideo.forEach( (pVideo, i) => {\n        timeOuts.push(setTimeout(() => {                      // returns a unique number assoicated with the specific setTimeout\n          currentVideo = pVideo.video;                        \n          currentVideoURL = pVideo.originURL;\n          divRef.current.style.backgroundImage = `url(${currentVideo})`;\n\n          if(pVideo.originBlog !== undefined) {\n            setVideoBlog(pVideo.originBlog);\n            vSourceRef.current.href = currentVideoURL;\n          } else {\n            setVideoBlog(\"?\");\n            vSourceRef.current.href = `https://www.google.com/searchbyimage?safe=off&image_url=${currentVideo}`;\n          }\n        }, i * 5000)); // updates information 0 * 5000 = 0 seconds then 1 * 5000 = 5 seconds then 2 * 5000 = 10 seconds and so on\n      }); \n\n      // if end of video is reached then clear the video from the view      \n      timeOuts.push(setTimeout (() => {\n        props.ReachedEnd(props.video[0].id);\n        divRef.current.style.backgroundImage = \"url(null)\";\n        vSourceRef.current.href = \"/\";\n        setVideoBlog(\"\");\n      }, 30000)); // will update information after 30 seconds\n    }\n  }, [vSourceRef, divRef, props])\n\n  return  (\n    <div ref={divRef} className=\"videoOpt\" style={{backgroundImage: \"url(/)\"}}>\n      <div className=\"urlBlogSource\">\n      <a ref={vSourceRef} target=\"_blank\" rel=\"noopener noreferrer\" href={\"/\"}>{currentVideoBlog}</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Video; ","import React from 'react';\n\nimport Video from './Video';\n\nfunction Videos(props) {\n\n  // filter for selected video\n  const result = props.tracks.filter(track => track.selected === true);\n  \n  if(result) {\n    return (\n      <Video video={result} ReachedEnd={props.ReachedEnd}/>\n    );\n  }\n}\n\nexport default Videos;","// delete first '#' from hash\nvar hash = window.location.hash.substring(1).split(\"&\") \n\n.reduce((initialVlaue, item) => {\n  if(item) {\n    var parts = item.split(\"=\");  // split the hash based on '=' signs to get the access token\n    initialVlaue[parts[0]] = decodeURIComponent(parts[1]);  // decodes the hash component for the access token\n  }\n  return initialVlaue;\n}, ({}));\n\nexport default hash;","// API Key to access tumblr\nexport const tumblrApiKey = process.env.REACT_APP_TUMBLR_API_KEY;\n","import React, {Component, createRef} from 'react';\n\nimport Login from './components/Login';\nimport ExpiredToken from './components/ExpiredToken';\nimport NotEnoughData from './components/NotEnoughData';\nimport WelcomeMessage from './components/WelcomeMessage';\nimport Tracks from './components/Tracks';\nimport Videos from './components/Videos'\n\nimport hash from './spotifyWebAPI/uri_hash';\nimport { tumblrApiKey } from './tumblr_config';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container'\n\nlet access_token = null;\nconst mainViewRef = createRef();\n\nclass App extends Component {\n  \n  state = {\n    expired_token: false,\n    spotify_login: false,\n    initialLoad: false,\n    notEnoughData: false,\n    tracks: [],\n  }\n\n  componentDidMount() {\n    access_token = hash.access_token; // retrieved from uri_hash.js\n\n    if(access_token) {\n      this.retrieveSpotifyData();      \n      this.setState({ spotify_login: true});\n    }\n  }\n \n  // Spotify API call\n  retrieveSpotifyData = async () => {\n    const response = await fetch('https://api.spotify.com/v1/me/top/tracks?limit=5', { \n      headers: {\n        'Authorization': 'Bearer ' + access_token,\n      }\n    })\n\n    const json = await response.json();\n\n    if(response.status === 401) {\n      this.setState({expired_token: true});\n    } else {\n      // check if the returned API call has any data\n      if(json.items.length !== 0) {\n        const parsedItems = json.items.filter(item => item.preview_url != null); // based on the returned data, only store items which have a song preview\n\n        // check if there are enoung tracks \n        if(parsedItems.length > 1) {\n          // if successful until now, create and store tracks in state    \n          this.setState({ tracks: parsedItems.map((pItem, index) => {\n            return {\n              id: index,\n              artistsName: pItem.artists[0].name,\n              songName: pItem.name,\n              previewURL: pItem.preview_url,\n              previewVideo: [],\n              videoTime: 0,\n              image: pItem.album.images[1],\n              selected: false \n            };\n            })\n          })\n          this.retrieveTumblrData(); // call Tumblr API after spotify API information is stored\n        } else {\n          this.setState({notEnoughData: true});\n        }\n      } else {\n        this.setState({notEnoughData: true});\n      }\n    }\n  }\n\n  // Tumblr API call\n  retrieveTumblrData = async () => {\n    const response = await fetch(`https://api.tumblr.com/v2/blog/bimir.tumblr.com/posts/photo?limit=100&api_key=${tumblrApiKey}&offset=0`)\n    const json = await response.json();\n    const parsedVideo = json.response.posts.filter(post => post.type === \"photo\"); // filter response to only store gifs\n\n    const numOfVids = ((this.state.tracks.length) * 6); // for each track there should be 6 gifs, in total there will be tracks * 6 gifs\n    var i = 0;\n\n    this.setState({ tracks: this.state.tracks.map((track, index) => {\n        for(i; i < numOfVids; i++) {\n            // push gif information for each track\n            track.previewVideo.push({\n              video: parsedVideo[i].photos[0].original_size.url,\n              originBlog: parsedVideo[i].source_title,\n              originURL: parsedVideo[i].source_url\n            });\n            // once a remainder of 5 is reached or 6 gifs (0 to 5), break out of loop and start storking gifs for the next track\n            if((i % 6) === 5) {\n              i++;  // update the index of the loop counter to start at the next index\n              break;\n            }\n        }\n          return track;\n      }) \n    })\n    this.setState({initialLoad: true}); // check to wait for the inital render of the page to cope with the API calls (for Recommendations tag)\n  }\n\n  // used to manage the currently selected track \n  UpdateSelected = (trackId) => {\n    this.setState({ tracks: this.state.tracks.map(track => {\n      if(track.id === trackId) {\n        track.selected = true;\n      }\n      else {\n        track.selected = false;\n      }\n      return track;\n    })\n  })\n  }\n\n  // once the track has finished, update the selected state to false\n  ReachedEnd = (trackId) => {\n    this.setState({ tracks: this.state.tracks.map(track => {\n      if(track.id === trackId) {\n        track.selected = false;\n      }\n      return track;\n    })\n  })\n  }\n\n  render() {\n    const login = this.state.spotify_login;\n    \n    if(this.state.expired_token) {\n      console.log(\"The provided token has expired, if you would like to learn more check out https://developer.spotify.com/documentation/general/guides/authorization-guide/#implicit-grant-flow\");\n      return (\n        <div className=\"App\">\n          <div style={{backgroundColor:'#312533', height:'100vh'}}>\n            <ExpiredToken />\n          </div>\n        </div>\n      );\n    } else {\n      if(this.state.notEnoughData) {\n        return (\n          <div className=\"App\">\n            <div style={{backgroundColor:'#312533', height:'100vh'}}>\n              <NotEnoughData />\n            </div>\n          </div>\n        );\n      } else {\n        return (\n          <div ref={mainViewRef} className=\"App\">\n            {login \n              ?\n                <div className=\"mainView\">\n                  <WelcomeMessage />\n                  <div className=\"Tracks\">\n                    <Container fluid>\n                      <Tracks tracks={this.state.tracks} updateSelected={this.UpdateSelected}/>\n                    </Container>  \n                    {this.state.initialLoad &&\n                      <div className=\"mailToView\">\n                        <div className=\"mailTo\">\n                          <a href=\"mailto:discovertracks@gmail.com?subject=Website (Recommendations/Issues)&body=<Email me any Tumblr blogs you would like to be featured next/ Or any issues/recommendations you have for this website.>\">Recommendations</a>\n                        </div>\n                      </div>\n                    }\n                  </div>\n                  <div className=\"Video\">\n                    <Videos tracks={this.state.tracks} ReachedEnd={this.ReachedEnd}/>\n                  </div> \n                </div>\n              : \n                <div style={{backgroundColor:'#312533', height:'100vh'}}>\n                  <Login login={this.login}/> \n                </div>\n            }\n          </div>\n        );\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}